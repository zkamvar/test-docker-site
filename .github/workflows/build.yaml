name: build-quarto-pages
on:
  push:
    branches: [ main ]

permissions:
  contents: write
jobs:
  repos:
    env:
      APP_ID: ${{ vars.APP_ID }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.repos.outputs.repos }}
      slug: ${{ steps.repos.outputs.slug }}
      id: ${{ steps.repos.outputs.id }}
      email: ${{ steps.repos.outputs.email }}
    steps:
      - id: checkout
        uses: actions/checkout@v4
      - id: install
        run: pip install -r requirements.txt
      - id: repos
        run: python getInstallations.py
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/zkamvar/test-docker-site:main
      ports:
        - 80
      volumes:
        - ${{ github.workspace }}:/site
    steps:
      - id: checkout
        uses: actions/checkout@v4
      - id: build
        run: ls /site && quarto render /site
      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: 'site'
          path: '/site/'
  push:
    runs-on: ubuntu-latest
    needs: [build, repos]
    steps:
      - id: checkout-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: 'pages'
      - id: fetch-artifact
        uses: actions/download-artifact@v4
        with:
          name: 'site'
      - id: publish
        run: |
          echo "${{ needs.repos.outputs.repos }}"
          cd pages
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id}}+${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin \
          https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          ls
          git status
          # remove everything in the old site
          git rm -r "*" || echo "nothing to do"
          cp -R ../_site/* .
          touch .nojekyll
          git add . && git commit --amend -m 'deploy' && git push --force

  

