name: build-quarto-pages
on:
  push:
    branches: [ main ]

permissions:
  contents: write
jobs:
  repos:
    env:
      APP_ID: ${{ vars.APP_ID }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.repos.outputs.repos }}
      slug: ${{ steps.repos.outputs.slug }}
      id: ${{ steps.repos.outputs.id }}
      email: ${{ steps.repos.outputs.email }}
      token: ${{ steps.token.outputs.token }}
    steps:
      - id: checkout
        uses: actions/checkout@v4
      - id: install
        run: pip install -r requirements.txt
      - id: repos
        run: python getInstallations.py
  build:
    runs-on: ubuntu-latest
    needs: [repos]
    continue-on-error: true
    strategy: 
      matrix: 
        site: ${{ fromJSON(needs.repos.outputs.repos) }}
    container:
      image: ghcr.io/zkamvar/test-docker-site:main
      ports:
        - 80
      volumes:
        - ${{ github.workspace }}:/site
    steps:
      - id: id
        run: |
          owner="${{ matrix.site.owner }}"
          name="${{ matrix.site.name }}"
          echo "repo=$owner/$name" >> $GITHUB_OUTPUT
          echo "file=$owner-$name" >> $GITHUB_OUTPUT
      - id: checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.id.outputs.repo }}
      - id: build
        run: bash -x /render.sh
      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.id.outputs.file }}
          path: '/site/pages/'
  push:
    runs-on: ubuntu-latest
    needs: [build, repos]
    continue-on-error: true
    strategy: 
      matrix: 
        site: ${{ fromJSON(needs.repos.outputs.repos) }}
    steps:
      - id: checkout-this-here-repo-scripts
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            scripts
      - id: id
        run: |
          owner="${{ matrix.site.owner }}"
          name="${{ matrix.site.name }}"
          echo "repo=$owner/$name" >> $GITHUB_OUTPUT
          echo "file=$owner-$name" >> $GITHUB_OUTPUT
      - uses: actions/create-github-app-token@v1
        id: token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ matrix.site.owner }}
          repositories: ${{ matrix.site.name }}
      - id: check-branch
        env:
          GH_TOKEN: ${{ github.token }}
        name: "check for gh-pages branch and create if needed"
        run: | 
          bash "${{ github.workspace }}/scripts/check-gh-pages.sh" \
            "${{ steps.id.outputs.repo }}" \
            "${{ needs.repos.outputs.slug }}" \
            "${{ needs.repos.outputs.email }}" \
            "${{ steps.token.outputs.token }}"
      - id: checkout-pages
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.id.outputs.repo }}
          ref: gh-pages
          path: 'pages'
          token: ${{ steps.token.outputs.token }}
      - id: fetch-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.id.outputs.file }}
      - id: publish
        run: | 
          bash "${{ github.workspace }}/scripts/pushit.sh" \
            "${{ steps.id.outputs.repo }}" \
            "${{ needs.repos.outputs.slug }}" \
            "${{ needs.repos.outputs.email }}" \
            "${{ steps.token.outputs.token }}"

  

